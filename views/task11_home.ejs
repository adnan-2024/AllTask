<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    table {
      border-collapse: collapse;
      border-spacing: 0;
      width: 80%;
      margin-left: 120px;
      border: 1px solid #ddd;
    }

    th,
    td {
      text-align: left;
      padding: 8px;
    }

    tr:nth-child(even) {
      background-color: #f2f2f2
    }
    .bottomnavigation{
      display: flex;
      width: 100%;
      gap:20px;
      margin-top: 20px;
      margin-left: 120px;
    }
    .searchinput{
      width:760px;
      margin: 0 auto;
      margin-left: 120px;
      padding: 12px;
      margin-bottom: 12px;
    }
    button{
      border: none;
      cursor: pointer;
      padding: 10px 20px;

      background-color: teal;
      color: white;
    }
  </style>
  <script>
    let filterdata=[];
    let resultperPage=10;
    let page=1;
   
    let offset;
    let numberofPages;


    async function getPosts() {
      let response0 = await fetch(`https://jsonplaceholder.typicode.com/posts`);
      let data0= await response0.json();
      data0.forEach((post)=>{
        filterdata.push(post);
      })
     
        let totalposts=data0.length;
        offset=(page-1)*resultperPage;
        numberofPages=Math.ceil(totalposts/resultperPage);
        let response = await fetch(`https://jsonplaceholder.typicode.com/posts/?_start=${offset}&_limit=${resultperPage}`);
      let data = await response.json();
     
      
      var posttable = document.getElementById("posttable");
      data.forEach((post) => {
        var newRow = posttable.insertRow();
        var postIdcell = newRow.insertCell();
        postIdcell.innerHTML = post.id;
        var userIdCell = newRow.insertCell();
        userIdCell.innerHTML = post.title;
        var postDescription = newRow.insertCell();
        postDescription.innerHTML = post.body;
        var postAction = newRow.insertCell();
        var a= document.createElement("a");
        var linkText = document.createTextNode("View");
      a.appendChild(linkText);
      a.title = "View";
      a.href = `/api/singlepost/${post.id}`;
      postAction.appendChild(a);
        
      });
    

    }

    getPosts();




    async function handleNavigation(){

     if(page==numberofPages){
     return
     }
      page++;
      offset=(page-1)*resultperPage;
   
      let response = await fetch(`https://jsonplaceholder.typicode.com/posts/?_start=${offset}&_limit=${resultperPage}`);
      let data = await response.json();

      var posttable = document.getElementById("posttable");
            posttable.innerHTML=""
      data.forEach((post) => {
        var newRow = posttable.insertRow();
        var postIdcell = newRow.insertCell();
        postIdcell.innerHTML = post.id;
        var userIdCell = newRow.insertCell();
        userIdCell.innerHTML = post.title;
        var postDescription = newRow.insertCell();
        postDescription.innerHTML = post.body;
        var postAction = newRow.insertCell();
        var a= document.createElement("a");
        var linkText = document.createTextNode("View");
      a.appendChild(linkText);
      a.title = "View";
      a.href = `/api/singlepost/${post.id}`;
      postAction.appendChild(a);
        
      });
      
    }

    async function handlebottomNavigation(){
  
    if(page==1){
      return
    }
     
    page--;
      offset=(page-1)*resultperPage;
     
      let response = await fetch(`https://jsonplaceholder.typicode.com/posts/?_start=${offset}&_limit=${resultperPage}`);
      let data = await response.json();

      var posttable = document.getElementById("posttable");
            posttable.innerHTML=""
      data.forEach((post) => {
        var newRow = posttable.insertRow();
        var postIdcell = newRow.insertCell();
        postIdcell.innerHTML = post.id;
        var userIdCell = newRow.insertCell();
        userIdCell.innerHTML = post.title;
        var postDescription = newRow.insertCell();
        postDescription.innerHTML = post.body;
        var postAction = newRow.insertCell();
        var a= document.createElement("a");
        var linkText = document.createTextNode("View");
      a.appendChild(linkText);
      a.title = "View";
      a.href = `/api/singlepost/${post.id}`;
      postAction.appendChild(a);
        
      });
      
    }
async function handlestartNavigation(){
  let response = await fetch(`https://jsonplaceholder.typicode.com/posts/?_start=0&_limit=${resultperPage}`);
      let data = await response.json();
     
      var posttable = document.getElementById("posttable");
            posttable.innerHTML=""
      data.forEach((post) => {
        var newRow = posttable.insertRow();
        var postIdcell = newRow.insertCell();
        postIdcell.innerHTML = post.id;
        var userIdCell = newRow.insertCell();
        userIdCell.innerHTML = post.title;
        var postDescription = newRow.insertCell();
        postDescription.innerHTML = post.body;
        var postAction = newRow.insertCell();
        var a= document.createElement("a");
        var linkText = document.createTextNode("View");
      a.appendChild(linkText);
      a.title = "View";
      a.href = `/api/singlepost/${post.id}`;
      postAction.appendChild(a);
        
      });
      page=1;

}

 async function handlebottomendNavigation(){
  
 
let offset0=(numberofPages-1)*resultperPage;
  let response = await fetch(`https://jsonplaceholder.typicode.com/posts/?_start=${offset0}&_limit=${resultperPage}`);
      let data = await response.json();

      var posttable = document.getElementById("posttable");
         posttable.innerHTML=""
      data.forEach((post) => {
        var newRow = posttable.insertRow();
        var postIdcell = newRow.insertCell();
        postIdcell.innerHTML = post.id;
        var userIdCell = newRow.insertCell();
        userIdCell.innerHTML = post.title;
        var postDescription = newRow.insertCell();
        postDescription.innerHTML = post.body;
        var postAction = newRow.insertCell();
        var a= document.createElement("a");
        var linkText = document.createTextNode("view");
      a.appendChild(linkText);
      a.title = "view";
      a.href = `/api/singlepost/${post.id}`;
      postAction.appendChild(a);
       
      });
      page=numberofPages;
  
 }

 function search(){
  
          let search=document.getElementById("search").value;
          search = search.toLowerCase();
          let data=filterdata.filter((post)=>{
            return post.title.indexOf(search) > -1; 
           
           
          });
          
          var posttable = document.getElementById("posttable");
          posttable.innerHTML="";
         if(data.length>1){
                 data.forEach((data)=>{
                  var newRow = posttable.insertRow();
        var postIdcell = newRow.insertCell();
        postIdcell.innerHTML = data.id;
        var userIdCell = newRow.insertCell();
        userIdCell.innerHTML = data.title;
        var postDescription = newRow.insertCell();
        postDescription.innerHTML = data.body;
                 })
         }
         else{

      
            var newRow = posttable.insertRow();
        var postIdcell = newRow.insertCell();
        postIdcell.innerHTML = data[0].id;
        var userIdCell = newRow.insertCell();
        userIdCell.innerHTML = data[0].title;
        var postDescription = newRow.insertCell();
        postDescription.innerHTML = data[0].body;
      }

 }

  

  </script>
</head>

<body>
  <div style="overflow-x:auto;">
    <div class="searchbox">
      <input type="text" id="search" placeholder="Search for Post title" class="searchinput" onkeydown="search()" name="search">
  
    </div>
    <table id="posttable">
      <tr>
        <th>Post Id</th>
        <th>Post Title</th>
        <th>Post Sescription</th>
        <th>View</th>
      </tr>

    </table>

  </div>
  <div class="bottomnavigation">
    <button onclick="handlestartNavigation()"><<</button>
    <button onclick="handlebottomNavigation()"><</button>

    <button onclick="handleNavigation()">></button>
    <button onclick="handlebottomendNavigation()">>></button>
   
   
  </div>

</body>

</html>